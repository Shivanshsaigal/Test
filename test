document.addEventListener("DOMContentLoaded", () => {
  const sections: NodeListOf<HTMLElement> = document.querySelectorAll("[data-section]");
  const menuItems: NodeListOf<HTMLLIElement> = document.querySelectorAll("#menu li");

  // **1️⃣ Scroll-based Highlighting using Intersection Observer**
  const observer = new IntersectionObserver(
    (entries) => {
      entries.forEach((entry) => {
        if (entry.isIntersecting) {
          const sectionId = entry.target.getAttribute("data-section");

          if (sectionId) {
            menuItems.forEach((item) => item.classList.remove("active"));

            const activeItem = document.querySelector(`#menu li[data-section="${sectionId}"]`) as HTMLLIElement | null;
            if (activeItem) {
              activeItem.classList.add("active");
            }
          }
        }
      });
    },
    { rootMargin: "-50% 0px -50% 0px", threshold: 0.5 }
  );

  // Observe all sections
  sections.forEach((section) => observer.observe(section));

  // **2️⃣ Smooth Scroll to Section on Click**
  menuItems.forEach((item) => {
    item.addEventListener("click", (event) => {
      const sectionId = item.getAttribute("data-section");

      if (sectionId) {
        const section = document.getElementById(sectionId);
        if (section) {
          section.scrollIntoView({ behavior: "smooth", block: "start" });

          // Optional: Manually update the active class
          menuItems.forEach((item) => item.classList.remove("active"));
          item.classList.add("active");
        }
      }
    });
  });
});


observeSections() {
    const sections = document.querySelectorAll("[data-section]");

    const observer = new IntersectionObserver(
      (entries) => {
        for (const entry of entries) {
          if (entry.isIntersecting) {
            this.activeSection = entry.target.getAttribute("data-section") || "";
            this.requestUpdate();
          }
        }
      },
      { rootMargin: "-50% 0px -50% 0px", threshold: 0.5 }
    );

    sections.forEach((section) => observer.observe(section));
  }

  scrollToSection(sectionId: string) {
    const section = document.getElementById(sectionId);
    if (section) {
      section.scrollIntoView({ behavior: "smooth", block: "start" });
      this.activeSection = sectionId;
    }
  }
